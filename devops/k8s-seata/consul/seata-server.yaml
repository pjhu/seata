apiVersion: v1
kind: Service
metadata:
  name: seata-server
  namespace: seata
  labels:
    k8s-app: seata-server
spec:
  type: LoadBalancer
  ports:
    - port: 8091
      targetPort: 8091
      protocol: TCP
      name: http
  selector:
    k8s-app: seata-server

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: seata-server
  namespace: seata
  labels:
    k8s-app: seata-server
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: seata-server
  template:
    metadata:
      labels:
        k8s-app: seata-server
    spec:
      containers:
        - name: seata-server
          image: seataio/seata-server:1.4.2
          imagePullPolicy: IfNotPresent
          env:
            - name: STORE_MODE
              value: db
            - name: SEATA_CONFIG_NAME
              value: file:/root/seata-config/registry.conf
          ports:
            - name: http
              containerPort: 8091
              protocol: TCP
          volumeMounts:
            - name: seata-config
              mountPath: /root/seata-config
            - name: mysql-connector-java-8
              mountPath: /seata-server/libs/mysql-connector-java-8.0.25.jar     # 挂载路径
              
      volumes:
        - name: seata-config
          configMap:
            name: seata-server-config
        - name: mysql-connector-java-8
          hostPath:
            path: /Users/twcn/work/pjhu/seata/devops/mysql-connector-java-8.0.25.jar

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: seata-server-config
  namespace: seata
data:
  registry.conf: |
    registry {
        type = "consul"
        consul {
          cluster = "consul"
          serverAddr = "consul-server.consul:8500"
          aclToken = ""
          dc = "localdc1"
          namespace = "seata"
        }
    }
    config {
      type = "consul"
      consul {
        serverAddr = "consul-server.consul:8500"
        aclToken = ""
      }
    }